{"ast":null,"code":"var _jsxFileName = \"D:\\\\mostafa\\\\expense-tracker\\\\client\\\\src\\\\context\\\\GlobalState.js\";\nimport React, { createContext, useReducer } from 'react';\nimport AppReducer from './AppReducer';\nimport axios from 'axios'; //Intial state\n\nconst instialState = {\n  transactions: [{\n    id: 1,\n    text: 'Flower',\n    amount: -20\n  }, {\n    id: 2,\n    text: 'Salary',\n    amount: 300\n  }, {\n    id: 3,\n    text: 'Book',\n    amount: -10\n  }, {\n    id: 4,\n    text: 'Camera',\n    amount: 150\n  }],\n  error: null,\n  loading: true\n}; //createContext\n\nexport const GlobalContext = createContext(instialState); //provider component\n\nexport const GlobalProvider = ({\n  children\n}) => {\n  const [state, dispatch] = useReducer(AppReducer, instialState); //actions\n\n  async function getTransactions() {\n    try {\n      const res = await axios.get('api/v1/transactions');\n      dispatch({\n        type: 'GET_TRANSACTION',\n        payload: res.data.data\n      });\n    } catch (err) {\n      dispatch({\n        type: 'TRANSACTION_ERROR',\n        payload: err.response.data.error\n      });\n    }\n  }\n\n  function deleteTransactions(id) {\n    dispatch({\n      type: 'DELETE_TRANSACTION',\n      payload: id\n    });\n  }\n\n  function addTransaction(transaction) {\n    dispatch({\n      type: 'ADD_TRANSACTION',\n      payload: transaction\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(GlobalContext.Provider, {\n    value: {\n      transactions: state.transactions,\n      loading: state.loading,\n      getTransactions,\n      error: state.error,\n      addTransaction,\n      deleteTransactions\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 3\n    }\n  }, children);\n};","map":{"version":3,"sources":["D:/mostafa/expense-tracker/client/src/context/GlobalState.js"],"names":["React","createContext","useReducer","AppReducer","axios","instialState","transactions","id","text","amount","error","loading","GlobalContext","GlobalProvider","children","state","dispatch","getTransactions","res","get","type","payload","data","err","response","deleteTransactions","addTransaction","transaction"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAA+C,OAA/C;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AAEA,MAAMC,YAAY,GAAE;AAEnBC,EAAAA,YAAY,EAAC,CACb;AAAEC,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,QAAf;AAAyBC,IAAAA,MAAM,EAAE,CAAC;AAAlC,GADa,EAEZ;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,QAAf;AAAyBC,IAAAA,MAAM,EAAE;AAAjC,GAFY,EAGZ;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,MAAf;AAAuBC,IAAAA,MAAM,EAAE,CAAC;AAAhC,GAHY,EAIZ;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,QAAf;AAAyBC,IAAAA,MAAM,EAAE;AAAjC,GAJY,CAFM;AAOlBC,EAAAA,KAAK,EAAC,IAPY;AAQlBC,EAAAA,OAAO,EAAC;AARU,CAApB,C,CAWA;;AAEA,OAAO,MAAMC,aAAa,GAAEX,aAAa,CAACI,YAAD,CAAlC,C,CAEP;;AAGA,OAAO,MAAMQ,cAAc,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAc;AAC3C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAqBd,UAAU,CAACC,UAAD,EAAYE,YAAZ,CAArC,CAD2C,CAG3C;;AACD,iBAAeY,eAAf,GAAiC;AAChC,QAAG;AACF,YAAMC,GAAG,GAAG,MAAMd,KAAK,CAACe,GAAN,CAAU,qBAAV,CAAlB;AACAH,MAAAA,QAAQ,CAAC;AACRI,QAAAA,IAAI,EAAC,iBADG;AAERC,QAAAA,OAAO,EAACH,GAAG,CAACI,IAAJ,CAASA;AAFT,OAAD,CAAR;AAKA,KAPD,CAOC,OAAMC,GAAN,EAAU;AACVP,MAAAA,QAAQ,CAAC;AACRI,QAAAA,IAAI,EAAC,mBADG;AAERC,QAAAA,OAAO,EAACE,GAAG,CAACC,QAAJ,CAAaF,IAAb,CAAkBZ;AAFlB,OAAD,CAAR;AAMA;AAED;;AACD,WAASe,kBAAT,CAA4BlB,EAA5B,EAA+B;AAC9BS,IAAAA,QAAQ,CAAC;AACRI,MAAAA,IAAI,EAAC,oBADG;AAERC,MAAAA,OAAO,EAACd;AAFA,KAAD,CAAR;AAIA;;AACD,WAASmB,cAAT,CAAwBC,WAAxB,EAAoC;AACnCX,IAAAA,QAAQ,CAAC;AACRI,MAAAA,IAAI,EAAC,iBADG;AAERC,MAAAA,OAAO,EAAEM;AAFD,KAAD,CAAR;AAIA;;AAEA,sBACC,oBAAC,aAAD,CAAe,QAAf;AAAyB,IAAA,KAAK,EAAI;AAAGrB,MAAAA,YAAY,EAACS,KAAK,CAACT,YAAtB;AACjCK,MAAAA,OAAO,EAACI,KAAK,CAACJ,OADmB;AAEjCM,MAAAA,eAFiC;AAGhCP,MAAAA,KAAK,EAACK,KAAK,CAACL,KAHoB;AAIjCgB,MAAAA,cAJiC;AAKjCD,MAAAA;AALiC,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMEX,QANF,CADD;AAYA,CA/CM","sourcesContent":["import React ,{ createContext, useReducer}from 'react';\r\nimport AppReducer from './AppReducer';\r\nimport axios from 'axios';\r\n\r\n//Intial state\r\n\r\nconst instialState= {\r\n\r\n\ttransactions:[\r\n\t{ id: 1, text: 'Flower', amount: -20 },\r\n  { id: 2, text: 'Salary', amount: 300 },\r\n  { id: 3, text: 'Book', amount: -10 },\r\n  { id: 4, text: 'Camera', amount: 150 }],\r\n  error:null,\r\n  loading:true\r\n}\r\n\r\n//createContext\r\n\r\nexport const GlobalContext= createContext(instialState);\r\n\r\n//provider component\r\n\r\n\r\nexport const GlobalProvider = ({children})=>{\r\n\tconst [state, dispatch ] = useReducer(AppReducer,instialState);\r\n\r\n\t//actions\r\nasync function getTransactions() {\r\n\ttry{\r\n\t\tconst res = await axios.get('api/v1/transactions');\r\n\t\tdispatch({\r\n\t\t\ttype:'GET_TRANSACTION',\r\n\t\t\tpayload:res.data.data\r\n\t\t})\r\n\r\n\t}catch(err){\r\n\t\tdispatch({\r\n\t\t\ttype:'TRANSACTION_ERROR',\r\n\t\t\tpayload:err.response.data.error\r\n\t\t})\r\n\r\n\r\n\t}\r\n\r\n}\r\nfunction deleteTransactions(id){\r\n\tdispatch({\r\n\t\ttype:'DELETE_TRANSACTION',\r\n\t\tpayload:id\r\n\t});\r\n}\r\nfunction addTransaction(transaction){\r\n\tdispatch({\r\n\t\ttype:'ADD_TRANSACTION',\r\n\t\tpayload: transaction\r\n\t});\r\n}\r\n\r\n\treturn(\r\n\t\t<GlobalContext.Provider  value = {{ \ttransactions:state.transactions,\r\n\t\t\tloading:state.loading,\r\n\t\t\tgetTransactions,\r\n\t\t  error:state.error,\r\n\t\t addTransaction ,\r\n\t\t deleteTransactions}}>\r\n\t\t{ children }\r\n\t\t</GlobalContext.Provider>\r\n\r\n\r\n\t\t)\r\n}"]},"metadata":{},"sourceType":"module"}